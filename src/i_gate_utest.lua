require("engine/test/bustedhelper")
require("i_gate")

describe('i_gate', function()
  local i

  before_each(function()
    i = i_gate()
  end)

  describe("gate type", function()
    describe("is_i", function()
      it("should return true", function()
        assert.is_true(i:is_i())
      end)
    end)

    describe("is_h", function()
      it("should return false", function()
        assert.is_false(i:is_h())
      end)
    end)

    describe("is_x", function()
      it("should return false", function()
        assert.is_false(i:is_x())
      end)
    end)

    describe("is_y", function()
      it("should return false", function()
        assert.is_false(i:is_y())
      end)
    end)

    describe("is_z", function()
      it("should return false", function()
        assert.is_false(i:is_z())
      end)
    end)

    describe("is_s", function()
      it("should return false", function()
        assert.is_false(i:is_s())
      end)
    end)

    describe("is_t", function()
      it("should return false", function()
        assert.is_false(i:is_t())
      end)
    end)

    describe("is_swap", function()
      it("should return false", function()
        assert.is_false(i:is_swap())
      end)
    end)

    describe("is_control", function()
      it("should return false", function()
        assert.is_false(i:is_control())
      end)
    end)

    describe("is_cnot_x", function()
      it("should return false", function()
        assert.is_false(i:is_cnot_x())
      end)
    end)

    describe("is_garbage", function()
      it("should return false", function()
        assert.is_false(i:is_garbage())
      end)
    end)
  end)

  describe("state", function()
    describe("is_idle", function()
      it("should return true", function()
        assert.is_true(i:is_idle())
      end)
    end)

    describe("is_swapping", function()
      it("should return false", function()
        assert.is_false(i:is_swapping())
      end)
    end)

    describe("is_dropping", function()
      it("should return false", function()
        assert.is_false(i:is_dropping())
      end)
    end)

    describe("is_match", function()
      it("should return false", function()
        assert.is_false(i:is_match())
      end)
    end)
  end)

  describe("is_empty", function()
    it("should return true", function()
      assert.is_true(i:is_empty())
    end)
  end)

  describe("stringify", function()
    it("should return '_ '", function()
      assert.are.equals("_ ", stringify(i))
    end)
  end)
end)
